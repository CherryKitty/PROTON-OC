to test2  
  clear-all
  reset-ticks
  set network-names [ "criminal-links" "household-links" "partner-links" "sibling-links" "offspring-links" "friendship-links" "professional-links" "school-links" ]
  set network-used  [  0                0                  0              0               0                 0                  0                    0             ]
  create-persons 18 [
    set cached-oc-embeddedness nobody
    set oc-member? false
    set facilitator?  false
    set male? who mod 2 = 0
    set target-of-intervention false
    set age who * 149 mod 45 + 10
    set education-level who * 149 mod 4
    ;set oc-embeddedness 1
    set criminal-tendency who * 149 mod 100 / 100
    set wealth-level education-level who * 149 mod 4
    set job-level education-level who * 149 mod 4
    set propensity education-level who * 149 mod 100 / 100
    set migrant? who mod 3 = 0
  ]
  ask person 0 [
    create-partner-link-with person 1
    create-friendship-link-with person 2
    create-professional-link-with person 3
    create-school-link-with person 4
    create-criminal-link-with person 5 [ set num-co-offenses 5 ]
    create-offspring-link-from person 5
  ]
  ask person 6 [ create-friendship-link-with person 5 ]
  
  ask person 7 [ create-partner-link-with person 8 ]
  ask person 8 [ create-friendship-link-with person 9 ]
  ask person 9 [ create-offspring-link-to person 7 ]
  ask person 10 [ create-professional-link-with person 9 ]
  ask person 10 [ create-professional-link-with person 11 ]
  ask person 10 [ create-school-link-with person 13 ]
  ask person 10 [ create-professional-link-with person 9 ]
  ask person 11 [ create-professional-link-with person 12 ]
  ask person 12 [ create-professional-link-with person 13]
   ask person 12 [ create-professional-link-with person 14 ]
   ask person 12 [ create-professional-link-with person 16 ]
   
  ask person 13 [ create-friendship-link-with person 15 ]
  ask person 14 [ create-professional-link-with person 15 ]
  ask person 14 [ create-household-link-with person 17 ]
  ask person 16 [ create-household-link-with person 12 ]
  ask person 16 [ create-household-link-with person 17 ]
  
  ask person 5 [ set oc-member? true ]
  ask person 17 [ set oc-member? true ]
  ask person 9 [ set facilitator? true ]
  ask person 3 [ set facilitator? true ]
  set num-co-offenders-dist but-first csv:from-file "inputs/general/data/num_co_offenders_dist.csv"
  
  ;commit-crimes-OC-only
end

; to be used from the command line to get a dump
to dump-all-person-networks
  ask persons [ set label who ] ; without this command the ids of the nodes would be meaningless and/or missing
  foreach network-names [ listname ->
    let network-agentset links with [ breed = runresult listname ]
    if any? network-agentset [
      let network-file-name (word "networks/" listname  ".dl")
      nw:with-context persons runresult listname [
        nw:save-dl network-file-name
      ]
    ]
  ]
end
  
; to be used from the command line to load a dump
to load-all-person-networks
  foreach network-names [ name ->
    let it (word "networks/" name ".dl")
    if file-exists? it [
      show it
      ask runresult name [ die ]
      let file-content  (csv:from-file it " ")
      if length file-content > 5 [ repeat 5 [ set file-content but-first file-content ] ]
      ;show file-content
      ifelse name = "offspring-links" [
        foreach file-content [ a ->        
          run (word "ask person " item 0 a " [ create-" substring name 0 (length name - 1) "-to person " item 1 a " ]")
        ] 
      ]  [
        foreach file-content [ a ->        
          run (word "ask person " item 0 a " [ create-" substring name 0 (length name - 1) "-with person " item 1 a " ]")      
        ]
      ]
    ]
  ]  
end